{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TodoComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", task_r2.complete);\n  }\n}\nexport class TodoComponent {\n  constructor() {\n    this.tasks = [{\n      text: 'task 1',\n      complete: false\n    }, {\n      text: 'task 2',\n      complete: true\n    }, {\n      text: 'task 2',\n      complete: true\n    }];\n    setTimeout(() => {\n      this.tasks[0].complete = true;\n    }, timeout);\n  }\n  addTodo(value) {\n    this.tasks.push({\n      text: value,\n      complete: false\n    });\n  }\n}\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)();\n};\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"app-todo\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[3, \"click\"], [\"type\", \"text\"], [\"input\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_0_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.addTodo(_r0.value));\n      });\n      i0.ɵɵtext(1, \"\\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"input\", 1, 2);\n      i0.ɵɵelementStart(4, \"ul\");\n      i0.ɵɵtemplate(5, TodoComponent_li_5_Template, 4, 2, \"li\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAGEA,0BAA+B;IACvBA,YAAe;IAAAA,iBAAO;IAC5BA,2BAAmD;IACrDA,iBAAK;;;;IAFGA,eAAe;IAAfA,kCAAe;IACEA,eAAyB;IAAzBA,0CAAyB;;;ACEpD,OAAM,MAAOC,aAAa;EAexBC;IAdA,UAAK,GAAG,CACN;MACEC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;KACX,EACD;MACED,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;KACX,EACD;MACED,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;KACX,CACF;IAECC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACF,QAAQ,GAAG,IAAI;IAC/B,CAAC,EAAEG,OAAO,CAAC;EACb;EACAC,OAAO,CAACC,KAAa;IACnB,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC;MAAEP,IAAI,EAAEM,KAAK;MAAEL,QAAQ,EAAE;IAAK,CAAE,CAAC;EACnD;;AAtBWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDP1Bf,iCAAuC;MAA/BA;QAAAA;QAAA;QAAA,OAASA,qCAAoB;MAAA,EAAC;MAACA,0DAAO;MAAAA,iBAAS;MACvDA,8BAA4B;MAC5BA,0BAAI;MACFA,4DAGK;MACPA,iBAAK;;;MAJkBA,eAAQ;MAARA,mCAAQ","names":["i0","TodoComponent","constructor","text","complete","setTimeout","tasks","timeout","addTodo","value","push","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\angular\\test\\src\\app\\todo\\components\\todo\\todo.component.html","E:\\angular\\test\\src\\app\\todo\\components\\todo\\todo.component.ts"],"sourcesContent":["<button (click)=\"addTodo(input.value)\">создать</button>\n<input type=\"text\" #input />\n<ul>\n  <li *ngFor=\"let task of tasks\">\n    <span>{{ task.text }}</span>\n    <input type=\"checkbox\" [checked]=\"task.complete\" />\n  </li>\n</ul>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent {\n  tasks = [\n    {\n      text: 'task 1',\n      complete: false,\n    },\n    {\n      text: 'task 2',\n      complete: true,\n    },\n    {\n      text: 'task 2',\n      complete: true,\n    },\n  ];\n  constructor() {\n    setTimeout(() => {\n      this.tasks[0].complete = true;\n    }, timeout);\n  }\n  addTodo(value: string) {\n    this.tasks.push({ text: value, complete: false });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}